#include<stdio.h>
#include<stdlib.h>

struct node{
struct node *prev;
struct node *next;
int data;
};

struct node *head;

void insert-begin()
{
 struct node *ptr;
 int item;
 ptr=(struct node*)malloc(sizeof(struct node));
 
 if(ptr==NULL)
 {
   printf("over flow");
 }
 else
 {
   printf("enter value\n");
   scanf("%d",&item);
   if(head==NULL)
   {
     ptr->next=NULL;
     ptr->prev=NULL;
     ptr->data=item;
     head=ptr;
   }
   else
   {
     ptr->data=item;
     ptr->prev=NULL;
     ptr->next=head;
     head->prev=ptr;
     head=ptr;
   }
   printf("Node inserted\n");
 }
}

void insert_specified()
{
  struct node *ptr,*temp;
  int item,loc,i;
  ptr=(struct node*)malloc(sizeof(struct node));
  if(ptr==NULL)
  {
   printf("overflow");
  }
  else
  {
    temp=head;
    printf("Enter location\n");
    scanf("%d",&loc);
    for(i=0;;i<loc;i++)
    {
     temp=temp->next;
     if(temp=NULL)
     {
      printf("Can't find the location\n");
      return;
     }
    }
    printf("enter values");
    scanf("%d",&item);
    ptr->data=item;
    prev->next=temp->next;
    ptr->prev=temp;
    temp->next=ptr;
    temp->next->prev=ptr;
    printf("Node inserted\n");
  }
}



void insert_last()
{
  struct node *ptr,*temp;
  int item;
  ptr = (struct node *)malloc(sizeof(struct node));
 
  if(ptr==NULL)
  printf("Overflow");
 
  else
  {
    printf("Enter item value : ");
    scanf("%d",&item);

    if(head->next==NULL)
    {
       ptr->next=NULL;
       ptr->prev=NULL;
       ptr->data=item;
       head=ptr;
    }
    else
    {
       temp=head;
       while(temp->next!=NULL)
    {
      temp=temp->next;
    }
   
    temp->next=ptr;
    ptr->prev=temp;
    ptr->next=NULL;
    }
  }
}



void delete_begin()
{
  struct node *ptr;
 
  if(head==NULL)
  printf("Underflow");
 
  else if(head->next=NULL)
  {
     head=NULL;
     free(head);
     printf("Node Deleted\n");
     
  }
 
  else
  {
    ptr=head;
    head=head->next;
    head->prev=NULL;
    free(ptr);
    printf("Node deleted\n");
   
  }
}

void delete_specified()
{
 struct node *ptr,*temp;
  int val;
  printf("Enter the data after which the node is to be deleted\n");
  scanf("%d",&val);
  ptr=head;
  while(ptr->data !=val)
  {
   ptr=ptr->next;
  }
  if(ptr->next==NULL)
  {
    printf("can't delete");
  }
  else if(ptr->next->next==NULL)
  {
    ptr->next=NULL:
  }
  else
  {
    temp=ptr->next;
    ptr->next=temp->next;
    temp->next->prev=ptr;
    free(temp);
    printf("Node deleted\n");
  }
}

void delete_last()
{
  struct node *ptr;
 
  if(head==NULL)
  printf("Underflow");
 
  else if (head->next==NULL)
  {
    head=NULL;
    free(head);
    printf("Node Delete\n");
  }
 
  else
  {
    ptr=head;
    if(ptr->next!=NULL)
    {
      ptr=ptr->next;
    }
    ptr->prev->next=NULL;
    free(ptr);
    printf("Node Deleted\n");
  }
}

int main()
{
  int choice,val;
  while(1)
  {
    printf("Select operation\n");
    printf("1.insert begin \n 2. insert specified \n  3. insert last \n 4. begin delete  \n
     5. be ");
  }
}
